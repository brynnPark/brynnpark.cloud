name: Deploy Static Site to S3

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: my_web_page/node_modules
        key: yarn-deps-${{ hashFiles('my_web_page/yarn.lock') }}
        restore-keys: |
          yarn-deps-${{ hashFiles('my_web_page/yarn.lock') }}

    - name: Install dependencies
      run: npm install
      working-directory: my_web_page

    - name: Build app
      run: npm run build
      working-directory: my_web_page

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.0.0
    
    - name: Terraform init
      id: tf-init
      working-directory: terraform
      run: terraform init
      
    - name: Terraform validate
      working-directory: terraform
      run: terraform validate

    # An exit code of 0 indicated no changes, 1 a terraform failure, 2 there are pending changes.
    - name: Terraform plan
      id: tf-plan
      working-directory: terraform
      run: |
          terraform plan -no-color
      continue-on-error: true

    # Apply the pending changes
    - name: Terraform apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      working-directory: terraform
      run: |
        terraform apply -auto-approve -no-color
    
    # - name: Sync Bucket
    #   run: |
    #     aws s3 sync \
    #       --region ap-northeast-2 \
    #       build s3://<버킷 이름> \
    #       --delete
    #   working-directory: <작업할 디렉토리>
